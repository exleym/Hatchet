games:
  post:
    summary: Create new game
    operationId: createGame
    tags:
      - games
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../definitions.yml#/schemas/Game"
    responses:
      '201':
        description: Resource created
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Game"
      '400':
        description: Malformed request
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Error"
  get:
    summary: Get all games
    operationId: listGames
    tags:
      - games
    parameters:
      - name: limit
        in: query
        description: How many items to return at one time (max 100)
        required: false
        schema:
          type: integer
          format: int32
    responses:
      '200':
        description: A paged array of games
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../definitions.yml#/schemas/Game'
games/{gameId}:
  get:
    summary: Info for a specific game
    operationId: showGameById
    tags:
      - games
    parameters:
      - name: gameId
        in: path
        required: true
        description: The id of the game to retrieve
        schema:
          type: string
    responses:
      '200':
        description: A single game object with rich nested data
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Game"
      default:
        description: unexpected error
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Error"
  put:
    summary: Update a game
    operationId: update_game
    tags:
      - games
    parameters:
      - in: path
        name: gameId
        description: id of the game to update
        required: true
        schema:
          type: integer
          example: 88
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../definitions.yml#/schemas/Game"
    responses:
      '200':
        description: Successfully updated object
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Game"
      '404':
        description: These aren't the games you're looking for.
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Error"
  delete:
    summary: Delete a game from the system
    operationId: delete_game
    tags:
      - games
    parameters:
      - in: path
        name: gameId
        description: id of the game to delete
        required: true
        schema:
          type: integer
          example: 123
    responses:
      '204':
        description: Successfully deleted object. No content to return.
      '404':
        description: No game found with that id
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Error"
games/{gameId}/participants:
  get:
    summary: Get a list of participants in a given game
    operationId: get_game_participants
    tags:
      - games
    parameters:
      - name: gameId
        in: path
        required: true
        description: The id of the game to fetch
        schema:
          type: integer
    responses:
      '200':
        description: An array of game-participant objects
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../definitions.yml#/schemas/GameParticipant"
      '404':
        description: missing resource exception
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Error"
  post:
    summary: Add participant to game
    operationId: add_game_participant
    tags:
      - games
    parameters:
      - name: gameId
        in: path
        required: true
        description: The id of the game
        schema:
          type: integer
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../definitions.yml#/schemas/GameParticipant"
    responses:
      '201':
        description: Resource created
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/GameParticipant"
      '400':
        description: Malformed request
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Error"
games/{gameId}/scores:
  post:
    summary: Add scores to game
    operationId: add_score
    tags:
      - games
    parameters:
      - name: gameId
        in: path
        required: true
        description: The id of the game
        schema:
          type: integer
    requestBody:
      content:
        application/json:
          schema:
            $ref: "../definitions.yml#/schemas/Score"
    responses:
      '201':
        description: Resource created
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Game"
      '400':
        description: Malformed request
        content:
          application/json:
            schema:
              $ref: "../definitions.yml#/schemas/Error"